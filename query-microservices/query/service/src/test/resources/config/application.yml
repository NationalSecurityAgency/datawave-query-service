spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

  security:
    user.password: passwordNotUsed
    datawave:
      jwt.ttl: 3600
      issuers-required: true
      enforce-allowed-callers: false
      allowed-callers:
        - "cn=test keystore, ou=my department, o=my company, st=some-state, c=us<cn=test keystore, ou=my department, o=my company, st=some-state, c=us>"

hazelcast.client.enabled: false

# Uncomment the following line to override the query logic factory being used
# queryLogicFactoryLocation: "classpath:QueryLogicFactoryAlt.xml"

query:
  storage:
    backend:
      LOCAL
    lockManager:
      LOCAL
    syncStorage:
      true
    sendNotifications:
      true

  logic:
    baseQueryLogic:
      logicName: "BaseQueryLogic"
    eventQuery:
      logicName: "EventQuery"
    baseEventQuery:
      logicName: "BaseEventQuery"
      accumuloPassword: "value"
      tableName: "value"
      dateIndexTableName: "value"
      dateIndexHelperFactory: "someRef"
      defaultDateTypeName: "value"
      metadataTableName: "value"
      metadataHelperFactory: "someRef"
      indexTableName: "value"
      reverseIndexTableName: "value"
      maxResults: "value"
      queryThreads: "value"
      indexLookupThreads: "value"
      dateIndexThreads: "value"
      fullTableScanEnabled: "value"
      includeDataTypeAsField: "value"
      disableIndexOnlyDocuments: "value"
      indexOnlyFilterFunctionsEnabled: "value"
      includeHierarchyFields: "value"
      hierarchyFieldOptions: "someRef"
      baseIteratorPriority: "value"
      maxIndexScanTimeMillis: "value"
      collapseUids: "value"
      collapseUidsThreshold: "value"
      useEnrichers: "true"
      contentFieldNames:
        - "CONTENT"
      realmSuffixExclusionPatterns:
        - "<.*>$"
      minimumSelectivity: ".2"
      enricherClassNames:
        - "datawave.query.enrich.DatawaveTermFrequencyEnricher"
      useFilters: "value"
      filterClassNames:
        - "value"
      filterOptions: "someRef"
      auditType: "NONE"
      logicDescription: "Retrieve sharded events/documents, leveraging the global index tables as needed"
      eventPerDayThreshold: "40000"
      shardsPerDayThreshold: "value"
      maxTermThreshold: "value"
      maxDepthThreshold: "value"
      maxUnfieldedExpansionThreshold: "value"
      maxValueExpansionThreshold: "value"
      maxOrExpansionThreshold: "value"
      maxOrRangeThreshold: "value"
      maxOrExpansionFstThreshold: "value"
      maxFieldIndexRangeSplit: "value"
      maxIvaratorSources: "value"
      maxEvaluationPipelines: "value"
      maxPipelineCachedResults: "value"
      hdfsSiteConfigURLs: "value"
      zookeeperConfig: "value"
      ivaratorCacheDirConfigs: "someRef"
      ivaratorFstHdfsBaseURIs: "value"
      ivaratorCacheBufferSize: "10000"
      ivaratorMaxOpenFiles: "value"
      ivaratorCacheScanPersistThreshold: "100000"
      ivaratorCacheScanTimeoutMinutes: "value"
      eventQueryDatqeDecoratorTransformer: "someRef"
      modelTableName: "value"
      modelName: "DATAWAVE"
      querySyntaxParsers:
        "JEXL": null
        "LUCENE": "value-ref"
        "LUCENE-UUID": "value-ref"
        "TOKENIZED-LUCENE": "value-ref"
      queryPlanner: "someRef"
      sendTimingToStatsd: "false"
      collectQueryMetrics: "true"
      logTimingDetails: "false"
      statsdHost: "localhost"
      statsdPort: "8125"
      selectorExtractor: "someRef"
      evaluationOnlyFields: "value"

server:
  port: 0
  non-secure-port: 0
  servlet.context-path: /query
  ssl:
    client-auth: NEED
    trust-store: 'classpath:testCA.p12'
    trust-store-type: PKCS12
    trust-store-password: 'ChangeIt'
    key-store: 'classpath:testServer.p12'
    key-store-type: PKCS12
    key-store-password: 'ChangeIt'
  outbound-ssl:
    key-store: ${server.ssl.key-store}
    key-store-password: ${server.ssl.key-store-password}
    key-store-type: ${server.ssl.key-store-type}
    trust-store: ${server.ssl.trust-store}
    trust-store-password: ${server.ssl.trust-store-password}
    trust-store-type: ${server.ssl.trust-store-type}

management:
  endpoints:
    web:
      base-path: "/mgmt"

logging:
  level:
    datawave.microservice: DEBUG
    io.undertow.request: FATAL

audit-client:
  discovery:
    enabled: false
  uri: '${AUDIT_SERVER_URL:http://localhost:11111/audit}'
